#!/usr/bin/env bash

set -e

DEFAULT_PATH=~/.config/nvim

Help() {
    cat <<EOF
Usage: nvim-config [options]

Fetch Victor Aremu's a neovim config from GitHub into the specified path.

Options:
  --path               Specify the path where the neovim will be placed.
  --ref                Specify the reference (branch, tag, or commit hash) to clone. Default is 'main'.
  -h, --help           Show this help message

Examples:
  nvim-config --path /some/path --ref my-branch  # Clone using specified path and branch 'my-branch'
  nvim-config --path /some/path --ref my-tag     # Clone using specified path and tag 'my-tag'
  nvim-config --path /some/path --ref commit-hash    # Clone using specified path and commit hash 'commit-hash'

If no path is specified, it will default to ~/.config/nvim. If no reference is specified, it will default to 'main'.
EOF
}

move_existing_path() {
    local path=$1
    local backup_path="${path}_backup"
    if [ -d "$path" ]; then
        echo "Moving existing path to backup location: $backup_path"
        mv "$path" "$backup_path"
    fi
}

parse_arguments() {
    while [ "$#" -gt 0 ]; do
        case "$1" in
            --path)
                shift
                path="$1"
                ;;
            --ref)
                shift
                ref="$1"
                ;;
            -h|--help)
                Help
                exit 0
                ;;
            *)
                echo "Invalid argument: $1"
                exit 1
                ;;
        esac
        shift
    done
}

check_path() {
    local path=${1:-$DEFAULT_PATH}
    move_existing_path "$path"
    if [ ! -d "$path" ]; then
        echo "No path specified or path does not exist. Using default path: $path"
    fi

    local ref=${2:-main}
    git clone --branch "$ref" git@github.com:ahkohd/nvim.git "$path"
}

main() {
    parse_arguments "$@"

    if [ -z "$path" ]; then
        check_path
    else
        check_path "$path" "$ref"
    fi
}

main "$@"

